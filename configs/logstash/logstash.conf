input {
	gelf {
		port => 12201
	}
}

filter {

	if [image_name] =~ /^qlikea\/mira.*/ {
		json {
			source => "message"
		}
	}

	if [image_name] =~ /^qlikea\/qliktive-qix-session-service.*/ {
		json {
			source => "message"
		}
	}

	if [image_name] =~ /^qlikea\/engine.*/ {
		json {
			source => "message"
		}

    # Temporary mutation of qix engine log level field and timestamp
    if [severity] {
      mutate { rename => { "severity" => "logseverity" } }
    }

    if ![timestamp] {
      mutate { add_field => { "timestamp" => "%{@timestamp}" } }
    }
	}

	if [image_name] =~ /^qlikea\/qliktive-custom-analytics-openresty.*/ {
      #Nginx access logs
      json {
        source => "message"
  			add_field => {"log_type" => "http_access"}
        tag_on_failure => [ ]
      }
      #Nginx error logs
      grok {
			match => {
				"message" => [
						"(?<timestamp>%{YEAR}[./]%{MONTHNUM}[./]%{MONTHDAY} %{TIME}) \[%{LOGLEVEL:severity}\] %{POSINT:pid}#%{NUMBER}: %{GREEDYDATA:errormessage}"
				]
			}
			add_field => {"log_type" => "http_error"}
      tag_on_failure => [ ]
    }
  }

  # Replace timestamp with logstash @timestamp if it contains a forward slash
  if [timestamp] =~ /\// {
    mutate {
      replace => [ "timestamp", "%{@timestamp}" ]
    }
  }

  # If level is not numeric, mutate to logseverity to avoid conflict in elasticsearch
  if [level] =~ /[^0-9]+/ {
    mutate {
      convert => { "level" => "string" }
      rename => { "level" => "logseverity" }
      uppercase => [ "logseverity" ]
    }
  }
}

output {
	elasticsearch {
		hosts => "elasticsearch:9200"
	}
}
