version: 2
jobs:
  build:
    docker:
      - image: node:7
    working_directory: ~/qliktive-custom-analytics
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "test/package.json" }}
      - run:
          name: Install dependencies
          command: npm install --quiet
          working_directory: ~/qliktive-custom-analytics/test
      - run:
          name: Run ESLint
          command: npm run lint
          working_directory: ~/qliktive-custom-analytics/test
      - save_cache:
          key: dependency-cache-{{ checksum "test/package.json" }}
          paths:
            - test/node_modules
      - run:
          name: Install Docker Compose
          command: |
            set -x
            curl -L https://github.com/docker/compose/releases/download/1.15.0/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
            chmod +x /usr/local/bin/docker-compose
      - run:
          name: Validate docker-compose files
          command: npm run validate:compose
          working_directory: ~/qliktive-custom-analytics/test
      - run:
          name: Install docker client
          command: |
            curl -L -o /tmp/docker-17.06.0-dev.tgz https://master.dockerproject.org/linux/x86_64/docker-17.06.0-dev.tgz
            tar -xz -C /tmp -f /tmp/docker-17.06.0-dev.tgz
            mv /tmp/docker/* /usr/bin
      - setup_remote_docker
      - run:
          name: Login to Dockerhub
          command: |
            docker login -u "$DOCKER_USER" -p "$DOCKER_PASSWORD"
      - run:
          name: Deploy to remote Docker space
          command: |
            echo $GITHUB_CLIENT_ID > ~/qliktive-custom-analytics/secrets/GITHUB_CLIENT_ID
            echo $GITHUB_CLIENT_SECRET > ~/qliktive-custom-analytics/secrets/GITHUB_CLIENT_SECRET
            echo $JWT_SECRET > ~/qliktive-custom-analytics/secrets/JWT_SECRET
            ./deploy-local.sh
          working_directory: ~/qliktive-custom-analytics/scripts
      - run:
          name: Run E2E tests in remote Docker space
          command: ./run-e2e-tests-cci.sh
          working_directory: ~/qliktive-custom-analytics/scripts
      - deploy:
          name: Deploy public demo to AWS
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ] || [ "${CIRCLE_BRANCH}" == "certDeploy" ]; then
              curl -L https://github.com/docker/machine/releases/download/v0.12.2/docker-machine-`uname -s`-`uname -m` > /usr/local/bin/docker-machine
              chmod +x /usr/local/bin/docker-machine
              scp -o StrictHostKeyChecking=no ubuntu@${DOCKER_AWS_MANAGER_IP}:/home/ubuntu/*-docker-*.zip ~/
              apt-get update
              apt-get install unzip
              for i in ~/*-docker-*.zip; do ./import-machine.sh "$i"; done;
              export DOCKER_HOST="tcp://${DOCKER_AWS_MANAGER_IP}:2376"
              export DOCKER_CERT_PATH="/root/.docker/machine/machines/${DOCKER_AWS_MANAGER_NAME}"
              export DOCKER_MACHINE_NAME=${DOCKER_AWS_MANAGER_NAME}

              echo $DEPLOY_SSL_CERT > ~/qliktive-custom-analytics/secrets/DEPLOY_SSL_CERT
              echo $DEPLOY_SSL_KEY > ~/qliktive-custom-analytics/secrets/DEPLOY_SSL_KEY

              docker-compose -f docker-compose.yml -f docker-compose.pregen-ssl.yml config > docker-compose.merged.yml
              \cp docker-compose.merged.yml docker-compose.yml
              less docker-cpompose.yml
              # ./deploy-stack.sh -u demo
            fi
          working_directory: ~/qliktive-custom-analytics/scripts
